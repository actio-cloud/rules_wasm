module(name = "wasm-components")

bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "rules_rust", version = "0.49.3")

bazel_dep(name = "buildifier_prebuilt", version = "7.3.1", dev_dependency = True, repo_name = "buildtools")

register_toolchains("//:wasm32-wasip2-toolchain")

# Version for WASI interface definitions: https://github.com/WebAssembly/WASI/releases.
wasi_version = "0.2.1"

# Version for the WASI SDK: https://github.com/WebAssembly/wasi-sdk/releases.
wasi_sdk_version = "24"

# Version for `wasm-tools`: https://github.com/bytecodealliance/wasm-tools/releases.
wasm_tools_version = "1.216.0"

# Version for `wit-bindgen`: https://github.com/bytecodealliance/wit-bindgen/releases.
wit_bindgen_version = "0.30.0"

# The execution platform of all pre-built binaries.
execution_platform = "x86_64-linux"

# List of WASI packages to make available.
# TODO: Stop duplicating this information with wasip2/BUILD.bazel.
wasi_packages = ["cli", "clocks", "filesystem", "http", "io", "random", "sockets"]

# Rust setup: depend on `wit-bindgen` for build-time linking.
crate = use_extension("@rules_rust//crate_universe:extension.bzl", "crate")
crate.spec(
    package = "wit-bindgen",
    version = wit_bindgen_version,
)
crate.from_specs()
use_repo(crate, "crates")

# Manually download prebuilt binaries for various dependencies:

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_file = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_file")

http_archive(
    name = "wasi",
    build_file_content = """
[filegroup(
    name = package,
    srcs = glob(["WASI-{version}/wasip2/" + package + "/*.wit"]),
    visibility = ["//visibility:public"],
) for package in {packages}]
""".format(packages = repr(wasi_packages), version = wasi_version),
    integrity = "sha384-7kxa+SG+M43Wv9RkO/WrRghhN55JBWl9VOl/qgqo3X3673e4KipKJl3wMqp3oFSK",
    url = "https://github.com/WebAssembly/WASI/archive/refs/tags/v{version}.tar.gz"
        .format(version = wasi_version),
)

http_archive(
    name = "wasi-sdk",
    build_file_content = """
for binary in [
    "wasm32-wasip2-clang",
    "wasm32-wasip2-clang++",
    "wasm-component-ld",
    "ar",
    "nm",
    "objdump",
    "strip"
]:
    alias(
        name = binary,
        actual = "wasi-sdk-{version}.0-{platform}/bin/" + binary,
        visibility = ["//visibility:public"],
    )
""".format(
        platform = execution_platform,
        version = wasi_sdk_version,
    ),
    integrity = "sha384-zKYGc5aaiM61Xn9KklKJLsm3sTwm6zDrghzzZhDbBZ318eUFzNiBYwUZnb2dZgq3",
    url = "https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-{version}/wasi-sdk-{version}.0-{platform}.tar.gz"
        .format(
        platform = execution_platform,
        version = wasi_sdk_version,
    ),
)

http_archive(
    name = "wasm-tools",
    build_file_content = """
alias(
    name = "wasm-tools",
    actual = "wasm-tools-{version}-{platform}/wasm-tools",
    visibility = ["//visibility:public"],
)
""".format(
        platform = execution_platform,
        version = wasm_tools_version,
    ),
    integrity = "sha384-T96x029RaE8p1yhmJAR4Pdv1uGuq7cUkBI3heDaoMxz4eZm3YIGGz2SznlCvmyAd",
    url = "https://github.com/bytecodealliance/wasm-tools/releases/download/v{version}/wasm-tools-{version}-{platform}.tar.gz"
        .format(
        platform = execution_platform,
        version = wasm_tools_version,
    ),
)

http_archive(
    name = "wit-bindgen",
    build_file_content = """
alias(
    name = "wit-bindgen",
    actual = "wit-bindgen-{version}-{platform}/wit-bindgen",
    visibility = ["//visibility:public"],
)
""".format(
        platform = execution_platform,
        version = wit_bindgen_version,
    ),
    integrity = "sha384-1dKYqjyugHFTKvcMVRYhEs8rlwbMXrqIRHwuwM/nUVJTBhCTOwwc9wJf6/Pe5k5Y",
    url = "https://github.com/bytecodealliance/wit-bindgen/releases/download/v{version}/wit-bindgen-{version}-{platform}.tar.gz"
        .format(
        platform = execution_platform,
        version = wit_bindgen_version,
    ),
)

http_file(
    name = "libwit-bindgen-cabi-realloc",
    integrity = "sha384-NHz3ZkkmpvoqhS8KWedFZV3ORSMTVwdoBqoG/8g6NLqwIeK7clN5MCIJh63Sogp2",
    url = "https://github.com/bytecodealliance/wit-bindgen/raw/v{version}/crates/guest-rust/rt/src/libwit_bindgen_cabi_realloc.a"
        .format(version = wit_bindgen_version),
)
